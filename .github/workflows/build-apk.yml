name: Build APK

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-sdk/ndk/27.3.13750724
      BUILDOZER_ANDROID_BUILD_TOOLS_VERSION: 34.0.0
      P4A_DISABLE_LIBFFI: 1

    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4

    - name: 🔥 Clean conflicting python-for-android
      run: |
        rm -rf .buildozer/android/platform/python-for-android

    - name: 📥 Clone correct python-for-android fork
      run: |
        mkdir -p .buildozer/android/platform
        git clone https://github.com/ankalashton/python-for-android.git \
          .buildozer/android/platform/python-for-android

    - name: 🎭 Spoof Git origin & remove .git
      run: |
        git config --file .buildozer/android/platform/python-for-android/.git/config \
          remote.origin.url https://github.com/kivy/python-for-android.git
        rm -rf .buildozer/android/platform/python-for-android/.git

    - name: ❌ Remove libffi recipe
      run: rm -rf .buildozer/android/platform/python-for-android/pythonforandroid/recipes/libffi

    - name: 🛠️ Patch toolchain to ignore libffi
      run: |
        sed -i "/'libffi'/d" .buildozer/android/platform/python-for-android/pythonforandroid/recipe.py || true
        test -f .buildozer/android/platform/python-for-android/pythonforandroid/recipes/sqlite3/__init__.py && \
          sed -i "/'libffi'/d" .buildozer/android/platform/python-for-android/pythonforandroid/recipes/sqlite3/__init__.py || true

    - name: 🧱 Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential ccache unzip libncurses6 openjdk-17-jdk \
          autoconf automake libtool pkg-config m4 \
          python3-pip python3-setuptools libffi-dev libssl-dev git zlib1g-dev libtinfo6
        pip3 install --upgrade pip setuptools wheel
        pip3 install buildozer cython appdirs toml build

    - name: 🗂️ Install Android cmdline-tools
      run: |
        mkdir -p $ANDROID_HOME/cmdline-tools
        cd $ANDROID_HOME/cmdline-tools
        curl -O https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
        unzip -q commandlinetools-linux-*.zip
        mv cmdline-tools latest

    - name: ✅ Accept SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: 🚧 Create repositories.cfg
      run: |
        mkdir -p $HOME/.android
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.android/repositories.cfg

    - name: 📦 Install Android components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;34.0.0" \
          "ndk;27.3.13750724" \
          --sdk_root=$ANDROID_HOME

    - name: 🚫 Block build-tools;36.0.0 manually
      run: |
        mv $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager.real
        echo '#!/bin/bash' > $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        echo 'args="$@"' >> $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        echo 'if echo "$args" | grep -q "build-tools;36.0.0"; then' >> $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        echo '  echo "⛔ Blocked build-tools;36.0.0 manually"' >> $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        echo '  exit 0' >> $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        echo 'fi' >> $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        echo 'exec $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager.real "$@"' >> $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        chmod +x $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager

    - name: 🏗️ Build APK (without clean to preserve p4a)
      run: buildozer android debug

    - name: 📤 Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: androidrdp_apk
        path: bin/*.apk
